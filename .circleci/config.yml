version: 2.1

workflows:
  version: 2
  build:
    jobs:
    - debug

jobs:
  debug:    
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      RAILS_ENV: test
      CC_TEST_REPORTER_ID: f39e060a8b1a558ebd8aff75d5b9760bf1ae98f3f85d628ae28814f3c66438cd
      DATABASE_URL: "postgres://postgres@localhost/"
      COVERAGE: true
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.3-stretch-node-browsers
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_DB: pandas_nosetest
          POSTGRES_USER: postgres
          privileged: true        
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache
      - run:
          name: Steps
          command: |
            date --rfc-3339=seconds
            sudo gem update --system
            gem install bundler
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            bundle -v
            #nvm install
            bundle update --bundler
            #bundle check --path vendor/bundle
            bundle install --path vendor/bundle
            echo "before yarn"
            yarn install
            echo "before curl"
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            echo "before db:create"
            bundle exec rails db:create
            bundle exec rails webpacker:compile
            bundle exec rails db:schema:load
            './cc-test-reporter before-build'
            'bundle exec rspec spec --color --tty'
            '[ ! -f .approvals ] || bundle exec approvals verify --ask false'
            './cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.simplecov.json'
            'yarn test --colors'
            './cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.lcov.json'
            './cc-test-reporter sum-coverage coverage/codeclimate.*.json'
            './cc-test-reporter upload-coverage'
            'bundle exec bundle-audit check --update --ignore CVE-2015-9284'
            yarn build-storybook
      - save_cache:
          key: cache
          paths:
            - vendor/bundle
            - node_modules
            - /home/circleci/.npm
